
name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Download spaCy models
      run: |
        poetry run python -m spacy download en_core_web_sm
        poetry run python -m spacy download ru_core_news_sm

    - name: Run Unit Tests
      run: |
        poetry run pytest tests/unit/ -v --tb=short --maxfail=5
      
    - name: Run Integration Tests
      run: |
        poetry run pytest tests/integration/ -v --tb=short --maxfail=3

    - name: Run Critical E2E Test
      run: |
        poetry run pytest tests/e2e/test_nightmare_scenario.py::TestNightmareScenario::test_nightmare_scenario_gnatyuk_abdullaev -v --tb=short

    - name: Generate Test Report
      if: always()
      run: |
        poetry run pytest tests/unit/ tests/integration/ tests/e2e/test_nightmare_scenario.py::TestNightmareScenario::test_nightmare_scenario_gnatyuk_abdullaev --tb=no --quiet -v > test_results.txt 2>&1 || true
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        tail -20 test_results.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: test_results.txt
